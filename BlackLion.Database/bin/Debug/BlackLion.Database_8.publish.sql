/*
Deployment script for BlackLion

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BlackLion"
:setvar DefaultFilePrefix "BlackLion"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Items]...';


GO
CREATE SCHEMA [Items]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Items].[GizmoDetail]...';


GO
CREATE TABLE [Items].[GizmoDetail] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Type]           VARCHAR (100) NOT NULL,
    [GuildUpgradeId] INT           NULL,
    CONSTRAINT [PK_Items_GizmoDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[GatheringToolDetail]...';


GO
CREATE TABLE [Items].[GatheringToolDetail] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Type] VARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Items_GatheringToolDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[InfusionSlot]...';


GO
CREATE TABLE [Items].[InfusionSlot] (
    [Id]            INT IDENTITY (1, 1) NOT NULL,
    [ArmorDetailId] INT NULL,
    CONSTRAINT [PK_Items_InfusionSlot] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[BagDetail]...';


GO
CREATE TABLE [Items].[BagDetail] (
    [Id]           INT IDENTITY (1, 1) NOT NULL,
    [Size]         INT NOT NULL,
    [NoSellOrSort] BIT NOT NULL,
    CONSTRAINT [PK_Items_BagDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[BackItemDetail]...';


GO
CREATE TABLE [Items].[BackItemDetail] (
    [Id]                    INT           IDENTITY (1, 1) NOT NULL,
    [InfixUpgradeId]        INT           NULL,
    [SuffixItemId]          INT           NULL,
    [SecondarySuffixItemId] INT           NULL,
    [StatChoices]           VARCHAR (MAX) NULL,
    CONSTRAINT [PK_Items_BackItemDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[ConsumableDetail]...';


GO
CREATE TABLE [Items].[ConsumableDetail] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Type]           VARCHAR (100) NOT NULL,
    [Description]    VARCHAR (MAX) NULL,
    [DurationMs]     INT           NULL,
    [UnlockType]     VARCHAR (100) NULL,
    [ColorId]        INT           NULL,
    [RecipeId]       INT           NULL,
    [ExtraRecipeIds] VARCHAR (MAX) NULL,
    [GuildUpgradeId] INT           NULL,
    [ApplyCount]     INT           NULL,
    [Name]           VARCHAR (100) NULL,
    [Icon]           VARCHAR (255) NULL,
    [SkinIds]        VARCHAR (MAX) NULL,
    CONSTRAINT [PK_Items_ConsumableDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[ContainerDetail]...';


GO
CREATE TABLE [Items].[ContainerDetail] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Type] VARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Items_ContainerDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[InfixBuff]...';


GO
CREATE TABLE [Items].[InfixBuff] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [SkillId]     INT           NOT NULL,
    [Description] VARCHAR (MAX) NULL,
    CONSTRAINT [PK_Items_InfixBuff] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[InfixAttribute]...';


GO
CREATE TABLE [Items].[InfixAttribute] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [InfixUpgradeId] INT           NOT NULL,
    [Attribute]      VARCHAR (100) NOT NULL,
    [Modifier]       INT           NOT NULL,
    CONSTRAINT [PK_Items_InfixAttribute] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[InfixUpgrade]...';


GO
CREATE TABLE [Items].[InfixUpgrade] (
    [Id]         INT IDENTITY (1, 1) NOT NULL,
    [ItemStatId] INT NULL,
    [BuffId]     INT NULL,
    CONSTRAINT [PK_Items_InfixUpgrade] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[ArmorDetail]...';


GO
CREATE TABLE [Items].[ArmorDetail] (
    [Id]                    INT           IDENTITY (1, 1) NOT NULL,
    [Type]                  VARCHAR (100) NOT NULL,
    [WeightClass]           VARCHAR (100) NOT NULL,
    [Defense]               INT           NULL,
    [InfixUpgradeId]        INT           NULL,
    [SuffixItemId]          INT           NULL,
    [SecondarySuffixItemId] INT           NULL,
    [StatChoices]           VARCHAR (MAX) NULL,
    CONSTRAINT [PK_Items_ArmorDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[Detail]...';


GO
CREATE TABLE [Items].[Detail] (
    [Id]                    INT IDENTITY (1, 1) NOT NULL,
    [ArmorDetailId]         INT NULL,
    [BackItemDetailId]      INT NULL,
    [BagDetailId]           INT NULL,
    [ConsumableDetailId]    INT NULL,
    [ContainerDetailId]     INT NULL,
    [GatheringToolDetailId] INT NULL,
    [GizmoDetailId]         INT NULL,
    CONSTRAINT [PK_Items_Detail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[Item]...';


GO
CREATE TABLE [Items].[Item] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [ItemId]       INT           NOT NULL,
    [ChatLink]     VARCHAR (100) NULL,
    [Name]         VARCHAR (255) NOT NULL,
    [Icon]         VARCHAR (MAX) NULL,
    [Description]  VARCHAR (MAX) NULL,
    [Type]         VARCHAR (100) NOT NULL,
    [Rarity]       VARCHAR (100) NOT NULL,
    [Level]        INT           NULL,
    [VendorValue]  INT           NULL,
    [DefaultSkin]  INT           NULL,
    [Flags]        VARCHAR (MAX) NULL,
    [GameTypes]    VARCHAR (MAX) NULL,
    [Restrictions] VARCHAR (MAX) NULL,
    [DetailsId]    INT           NULL,
    CONSTRAINT [PK_Items_Item] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Items].[FK_BackItemDetail_InfixUpgrade]...';


GO
ALTER TABLE [Items].[BackItemDetail]
    ADD CONSTRAINT [FK_BackItemDetail_InfixUpgrade] FOREIGN KEY ([InfixUpgradeId]) REFERENCES [Items].[InfixUpgrade] ([Id]);


GO
PRINT N'Creating [Items].[FK_InfixAttribute_InfixUpgrade]...';


GO
ALTER TABLE [Items].[InfixAttribute]
    ADD CONSTRAINT [FK_InfixAttribute_InfixUpgrade] FOREIGN KEY ([InfixUpgradeId]) REFERENCES [Items].[InfixUpgrade] ([Id]);


GO
PRINT N'Creating [Items].[FK_InfixUpgrade_InfixBuff]...';


GO
ALTER TABLE [Items].[InfixUpgrade]
    ADD CONSTRAINT [FK_InfixUpgrade_InfixBuff] FOREIGN KEY ([BuffId]) REFERENCES [Items].[InfixBuff] ([Id]);


GO
PRINT N'Creating [Items].[FK_ArmorDetail_InfixUpgrade]...';


GO
ALTER TABLE [Items].[ArmorDetail]
    ADD CONSTRAINT [FK_ArmorDetail_InfixUpgrade] FOREIGN KEY ([InfixUpgradeId]) REFERENCES [Items].[InfixUpgrade] ([Id]);


GO
PRINT N'Creating [Items].[FK_Detail_ArmorDetail]...';


GO
ALTER TABLE [Items].[Detail]
    ADD CONSTRAINT [FK_Detail_ArmorDetail] FOREIGN KEY ([ArmorDetailId]) REFERENCES [Items].[ArmorDetail] ([Id]);


GO
PRINT N'Creating [Items].[FK_Detail_BackItemDetail]...';


GO
ALTER TABLE [Items].[Detail]
    ADD CONSTRAINT [FK_Detail_BackItemDetail] FOREIGN KEY ([BackItemDetailId]) REFERENCES [Items].[BackItemDetail] ([Id]);


GO
PRINT N'Creating [Items].[FK_Detail_BagDetail]...';


GO
ALTER TABLE [Items].[Detail]
    ADD CONSTRAINT [FK_Detail_BagDetail] FOREIGN KEY ([BagDetailId]) REFERENCES [Items].[BagDetail] ([Id]);


GO
PRINT N'Creating [Items].[FK_Detail_ConsumableDetail]...';


GO
ALTER TABLE [Items].[Detail]
    ADD CONSTRAINT [FK_Detail_ConsumableDetail] FOREIGN KEY ([ConsumableDetailId]) REFERENCES [Items].[ConsumableDetail] ([Id]);


GO
PRINT N'Creating [Items].[FK_Detail_ContainerDetail]...';


GO
ALTER TABLE [Items].[Detail]
    ADD CONSTRAINT [FK_Detail_ContainerDetail] FOREIGN KEY ([ContainerDetailId]) REFERENCES [Items].[ContainerDetail] ([Id]);


GO
PRINT N'Creating [Items].[FK_Detail_GatheringToolDetail]...';


GO
ALTER TABLE [Items].[Detail]
    ADD CONSTRAINT [FK_Detail_GatheringToolDetail] FOREIGN KEY ([GatheringToolDetailId]) REFERENCES [Items].[GatheringToolDetail] ([Id]);


GO
PRINT N'Creating [Items].[FK_Detail_GizmoDetail]...';


GO
ALTER TABLE [Items].[Detail]
    ADD CONSTRAINT [FK_Detail_GizmoDetail] FOREIGN KEY ([GizmoDetailId]) REFERENCES [Items].[GizmoDetail] ([Id]);


GO
PRINT N'Creating [Items].[FK_Item_Detail]...';


GO
ALTER TABLE [Items].[Item]
    ADD CONSTRAINT [FK_Item_Detail] FOREIGN KEY ([DetailsId]) REFERENCES [Items].[Detail] ([Id]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
